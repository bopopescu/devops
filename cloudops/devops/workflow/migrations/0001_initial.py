# Generated by Django 2.0.1 on 2018-02-10 16:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='authority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority_name', models.CharField(max_length=100, verbose_name='角色名')),
            ],
        ),
        migrations.CreateModel(
            name='authority_flow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_authority', models.CharField(max_length=500, null=True, verbose_name='原权限')),
                ('new_authority', models.CharField(max_length=500, null=True, verbose_name='修改后的权限')),
                ('describe', models.CharField(max_length=500, verbose_name='描述')),
                ('applicationtime', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('execute_time', models.DateTimeField(help_text='执行时间', null=True, verbose_name='执行时间')),
                ('status', models.IntegerField(choices=[(0, '不通过'), (1, '待审批'), (2, '项目经理审批通过'), (3, '权限变更完成')], help_text='0 不通过, 1 待审批, 2 项目经理审批通过, 3 已执行', verbose_name='状态')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
            ],
        ),
        migrations.CreateModel(
            name='authority_group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100, verbose_name='组名')),
            ],
        ),
        migrations.CreateModel(
            name='authority_module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.authority', verbose_name='角色id')),
            ],
        ),
        migrations.CreateModel(
            name='AuthorityChangeLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=5000, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('authority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.authority', verbose_name='角色')),
            ],
            options={
                'db_table': 'workflow_authority_change_logs',
            },
        ),
        migrations.CreateModel(
            name='authorityflow_logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('authority_flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.authority_flow', verbose_name='权限修改申请记录')),
            ],
        ),
        migrations.CreateModel(
            name='cron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.CharField(max_length=500, verbose_name='命令')),
                ('time', models.CharField(max_length=50, verbose_name='运行时间')),
                ('describe', models.CharField(max_length=1000, verbose_name='描述')),
                ('environmental', models.CharField(max_length=100, verbose_name='环境')),
                ('status', models.CharField(choices=[('running', '启用'), ('disable', '禁用'), ('delete', '删除')], max_length=7, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='cron_revision_logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='修改内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='修改时间')),
                ('revision_cron', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.cron', verbose_name='修改的cron')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
        ),
        migrations.CreateModel(
            name='cronflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cron_time', models.CharField(max_length=50, verbose_name='时间')),
                ('cron_order', models.CharField(max_length=500, verbose_name='命令')),
                ('environmental', models.CharField(max_length=100, verbose_name='环境')),
                ('describe', models.CharField(max_length=1000, verbose_name='描述')),
                ('applicationtime', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('completiontime', models.DateTimeField(auto_now=True, verbose_name='处理时间')),
                ('status', models.CharField(max_length=50, verbose_name='状态')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
            ],
        ),
        migrations.CreateModel(
            name='cronflow_logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('cronflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.cronflow', verbose_name='计划任务申请记录')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=100, verbose_name='模块名称')),
                ('module_url', models.CharField(max_length=200, verbose_name='模块url')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleChangeLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=5000, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Module', verbose_name='模块(权限)')),
            ],
            options={
                'db_table': 'workflow_module_change_logs',
            },
        ),
        migrations.CreateModel(
            name='project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=50, verbose_name='项目中文名')),
                ('project_english', models.CharField(max_length=50, verbose_name='项目英文名')),
                ('group', models.CharField(max_length=50, verbose_name='项目所属组')),
                ('source', models.IntegerField(choices=[(0, '外购'), (1, '自建')], verbose_name='来源')),
                ('describe', models.CharField(max_length=1000, verbose_name='描述')),
                ('applicationtime', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('completiontime', models.DateTimeField(auto_now=True, verbose_name='完成时间')),
                ('status', models.IntegerField(choices=[(0, '不通过'), (1, '未审批'), (2, '项目经理通过'), (3, 'CTO审核通过'), (4, '采购审批通过'), (5, '财务审批通过'), (9, '执行中')], verbose_name='状态')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicant_project', to=settings.AUTH_USER_MODEL, verbose_name='添加成员')),
                ('project_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='项目经理')),
            ],
        ),
        migrations.CreateModel(
            name='project_group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addtime', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project', verbose_name='负责项目')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='组成员')),
            ],
        ),
        migrations.CreateModel(
            name='project_releaseflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('describe', models.CharField(max_length=1000, verbose_name='发布内容')),
                ('version', models.CharField(max_length=100, verbose_name='版本号')),
                ('priority', models.IntegerField(choices=[(0, '普通'), (1, '紧急')], default=0, verbose_name='优先级')),
                ('testingreport', models.CharField(max_length=1000, verbose_name='测试报告')),
                ('applicationtime', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('completiontime', models.DateTimeField(auto_now=True, verbose_name='处理时间')),
                ('status', models.CharField(max_length=50, verbose_name='状态')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project', verbose_name='项目')),
            ],
        ),
        migrations.CreateModel(
            name='project_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100, unique=True, verbose_name='用户名')),
                ('is_active', models.IntegerField(choices=[(0, '禁用'), (1, '启用')], verbose_name='是否启用')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_project', to='workflow.project', verbose_name='项目名')),
            ],
        ),
        migrations.CreateModel(
            name='project_userflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_user', models.CharField(max_length=500, verbose_name='添加成员')),
                ('describe', models.CharField(max_length=1000, verbose_name='描述')),
                ('applicationtime', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('completiontime', models.DateTimeField(auto_now=True, verbose_name='处理时间')),
                ('status', models.CharField(max_length=50, verbose_name='状态')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicant_projectuser', to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project', verbose_name='项目')),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group', verbose_name='成员类型')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFlowLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project', verbose_name='项目申请记录')),
            ],
            options={
                'db_table': 'workflow_project_flow_logs',
            },
        ),
        migrations.CreateModel(
            name='ProjectUserApplyFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant', models.CharField(max_length=50, verbose_name='申请人')),
                ('user_name', models.CharField(max_length=50, verbose_name='用户名')),
                ('remarks', models.CharField(max_length=200, verbose_name='备注')),
                ('is_active', models.IntegerField(choices=[(0, '禁用'), (1, '启用')], default=1, verbose_name='是否启用')),
                ('applicationtime', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('execute_time', models.DateTimeField(help_text='执行时间', null=True, verbose_name='执行时间')),
                ('type', models.IntegerField(choices=[(0, '添加用户'), (1, '修改用户')], null=True, verbose_name='类型')),
                ('status', models.IntegerField(choices=[(0, '不通过'), (1, '待审批'), (2, '审批通过'), (3, '执行完成')], verbose_name='状态')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project', verbose_name='项目')),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='提交人')),
                ('user_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.authority_group', verbose_name='分配组')),
            ],
            options={
                'db_table': 'workflow_project_user_apply_flow',
            },
        ),
        migrations.CreateModel(
            name='ProjectUserApplyLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('user_apply_flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.ProjectUserApplyFlow', verbose_name='项目用户申请记录')),
            ],
            options={
                'db_table': 'workflow_project_user_apply_logs',
            },
        ),
        migrations.CreateModel(
            name='ProjectUserFlowLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('project_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project_userflow', verbose_name='成员申请记录')),
            ],
            options={
                'db_table': 'workflow_project_user_flow_logs',
            },
        ),
        migrations.CreateModel(
            name='releaseflow_logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('releaseflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project_releaseflow', verbose_name='项目变更申请记录')),
            ],
        ),
        migrations.CreateModel(
            name='user_authority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.authority', verbose_name='权限id')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project_user', verbose_name='用户id')),
            ],
        ),
        migrations.CreateModel(
            name='user_group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.authority_group', verbose_name='组id')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project_user', verbose_name='用户id')),
            ],
        ),
        migrations.CreateModel(
            name='UserChangeLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='日志内容')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project_user', verbose_name='项目用户更新记录')),
            ],
            options={
                'db_table': 'workflow_user_change_logs',
            },
        ),
        migrations.AddField(
            model_name='module',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='module_project', to='workflow.project', verbose_name='项目'),
        ),
        migrations.AddField(
            model_name='cronflow',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project', verbose_name='项目'),
        ),
        migrations.AddField(
            model_name='cron',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project', verbose_name='项目'),
        ),
        migrations.AddField(
            model_name='authority_module',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.Module', verbose_name='模块id'),
        ),
        migrations.AddField(
            model_name='authority_group',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_project', to='workflow.project', verbose_name='项目名'),
        ),
        migrations.AddField(
            model_name='authority_flow',
            name='modify_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project_user', verbose_name='要修改的用户'),
        ),
        migrations.AddField(
            model_name='authority_flow',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflow.project', verbose_name='项目'),
        ),
        migrations.AddField(
            model_name='authority',
            name='project_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authority_project', to='workflow.project', verbose_name='项目'),
        ),
        migrations.AlterUniqueTogether(
            name='project_user',
            unique_together={('user_name', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='authority_module',
            unique_together={('authority', 'module')},
        ),
        migrations.AlterUniqueTogether(
            name='authority_group',
            unique_together={('group_name', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='authority',
            unique_together={('authority_name', 'project_name')},
        ),
    ]
